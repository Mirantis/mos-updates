---

- name: Fuel status check
  script: files/health_check_fuel.sh
  environment:
      ENV_ID: "{{ env_id }}"
  run_once: true
  ignore_errors: true
  delegate_to: localhost
  register: health_check_fuel_result

- name: Free disk space checking on nodes
  shell: df -h | sed 's/%//' | awk '/dev/ {if ($5 > 90) {print $0; exit 1}}'
  ignore_errors: true
  register: disk_check_result

- name: Pacemaker status checking
  register: pcs_check_result
  ignore_errors: true
  check_pacemaker:
  when:
    - "'controller' in group_names"

- name: OpenStack services status checking
  script: files/health_check_os.sh
  ignore_errors: true
  register: health_check_os_result
  when:
    - "'controller' in group_names"


- name: Show health of Fuel
  run_once: true
  debug:
    msg: "{{ health_check_fuel_result.stdout_lines }}"
  when:
    - health_check_fuel_result | failed

- name: Show result of disk space checking
  debug:
    msg: "{{ disk_check_result.stdout_lines }}"
  when:
    - disk_check_result | failed

- name: Show result of Pacemaker status
  debug:
    msg: "{{ pcs_check_result.msg }}"
  when:
    - pcs_check_result | failed

- name: Show health of Core OpenStack services
  debug:
    msg: "{{ health_check_os_result.stdout_lines }}"
  when:
    - health_check_os_result | failed


- name: Fail if health check failed
  fail:
    msg: "[ERROR] Health Check failed. Please fix the issues (descibed above).
          For ignoring this step you can use \"health_check\" flag."
  when: pcs_check_result | failed or
        disk_check_result | failed or
        health_check_os_result | failed or
        health_check_fuel_result | failed

